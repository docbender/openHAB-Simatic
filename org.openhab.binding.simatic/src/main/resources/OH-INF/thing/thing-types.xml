<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="simatic"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">
	<!-- Simatic bridge -->
	<bridge-type id="bridge">
		<label>Simatic Bridge</label>
		<description>Represent single PLC or more exactly its connection, which uses individual things.</description>
		<channels>
			<channel id="TagCount" typeId="chTagCountTypeID"/>
			<channel id="Requests" typeId="chRequestsTypeID"/>
			<channel id="Bytes" typeId="chBytesTypeID"/>
		</channels>
		<properties>
			<property name="version">4.0</property>
			<property name="vendor">Siemens</property>
			<property name="pdu">Unknown</property>
			<property name="areasCount">Unknown</property>
			<property name="areas">Unknown</property>
		</properties>
		<config-description>
			<parameter name="address" type="text" required="true">
				<label>PLC IP/Host address</label>
				<description>Network IP/Host address of PLC</description>
				<context>network-address</context>
			</parameter>
			<parameter name="rack" type="integer" min="0" max="2" required="true">
				<label>Rack number</label>
				<description>The rack number in which CPU is presented</description>
				<default>0</default>
			</parameter>
			<parameter name="slot" type="integer" min="0" max="15" required="true">
				<label>Slot number</label>
				<description>The slot number where CPU is inserted</description>
				<default>2</default>
			</parameter>
			<parameter name="pollRate" type="integer" min="0" required="true">
				<label>Poll rate [ms]</label>
				<description>Determine period of data read from device. </description>
				<default>1000</default>
				<advanced>true</advanced>
			</parameter>
			<parameter name="charset" type="text">
				<label>Code page</label>
				<description>Define code page for communicated strings (e.g. ISO-8859-1, cp1250). If blank or wrong code page is
					defined, system code page is used.</description>
				<default></default>
				<advanced>true</advanced>
			</parameter>
			<parameter name="communicationType" type="text" pattern="^(PG)|(OP)|(S7)$" required="true">
				<label>Communication type</label>
				<description>Which type of communication should be established. Possibilities are PG, OP, S7 (default).</description>
				<default>S7</default>
				<options>
					<option value="PG">PG</option>
					<option value="OP">OP</option>
					<option value="S7">S7</option>
				</options>
				<advanced>true</advanced>
			</parameter>
			<parameter name="isS7200" type="boolean">
				<label>PLC is S7-200 series</label>
				<description>Communication partner is CP243 of Simatic S7-200</description>
				<default>false</default>
				<advanced>true</advanced>
			</parameter>
			<parameter name="updateMode" type="text">
				<label>Value update mode</label>
				<description>Update read value can be OnChange or Poll. In OnChange mode only changed values are sent into OH core (default). In Poll mode every value is sent into OH core (more CPU intensive).</description>
				<options>
					<option value="OnChange">OnChange</option>
					<option value="Poll">Poll</option>
				</options>
				<default>OnChange</default>
				<advanced>true</advanced>
			</parameter>
		</config-description>
	</bridge-type>

	<!-- Generic Thing Type -->
	<thing-type id="generic_device"
		extensible="chNumber,chColor,chString,chContact,chSwitch,chDimmer,chRollershutter">
		<supported-bridge-type-refs>
			<bridge-type-ref id="bridge"/>
		</supported-bridge-type-refs>
		<label>Simatic Thing</label>
		<description>Generic thing for Simatic Binding. This thing requires bridge to be defined.</description>
	</thing-type>

	<!-- Channels -->
	<!-- Bridge Channels -->
	<channel-type id="chAreasCountTypeID">
		<item-type>Number</item-type>
		<label>Areas count</label>
		<description>Communicated PLC data areas count</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="chAreasTypeID">
		<item-type>String</item-type>
		<label>Areas</label>
		<description>Communicated PLC data areas</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="chTagCountTypeID">
		<item-type>Number</item-type>
		<label>Channels count</label>
		<description>Channels count</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="chRequestsTypeID">
		<item-type>Number</item-type>
		<label>Request/s</label>
		<description>Requests per second to device</description>
		<state pattern="%d 1/s" readOnly="true"/>
	</channel-type>
	<channel-type id="chBytesTypeID">
		<item-type>Number</item-type>
		<label>Bytes/s</label>
		<description>Bytes per second grabbed from device</description>
		<state pattern="%d B/s" readOnly="true"/>
	</channel-type>

	<!-- Thing Channels -->
	<channel-type id="chNumber">
		<item-type>Number</item-type>
		<label>Number Value</label>
		<description>Supported Simatic data types are Bit, Byte, Word, Dword, Float</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
            <parameter name="unit" type="text">
                <label>Unit</label>
                <description>Received number unit. If specified, unit is send into openHAB together with new value. No validation against data type is provided.</description>
            </parameter>			
		</config-description>
	</channel-type>
	<channel-type id="chColor">
		<item-type>Color</item-type>
		<label>Color Value</label>
		<description>In Simatic represented RGB as Dword. Each Byte is single color part.</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="chString">
		<item-type>String</item-type>
		<label>Text Value</label>
		<description>Represented as array of Bytes.</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="chContact">
		<item-type>Contact</item-type>
		<label>Open/Close Contact</label>
		<description>Simatic data type is Byte or Bit. 0 - Close, 1 - Open</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="chSwitch">
		<item-type>Switch</item-type>
		<label>On/Off Switch</label>
		<description>Simatic data type is Byte or Bit. 0 - Off, 1 - On</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="chDimmer">
		<item-type>Dimmer</item-type>
		<label>Percentage Value</label>
		<description>Simatic data type is Byte. Range is 0-100</description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="chRollershutter">
		<item-type>Rollershutter</item-type>
		<label>Rollershutter</label>
		<description><![CDATA[
		      Simatic status data type is Byte for position (0-100%). Simatic command data types are Byte or Word. 
		      Byte for Stop/Up/Down (2-Stop,4-Up,8-Down)
			  Word first Byte for Move/Stop/Up/Down (1-Move,2-Stop,4-Up,8-Down) and second Byte for target position (0-100%)]]>
        </description>
		<config-description>
			<parameter name="stateAddress" type="text">
				<label>State address</label>
				<description>Simatic address to get item state. If empty, no data will be received.</description>
			</parameter>
			<parameter name="commandAddress" type="text">
				<label>Command address</label>
				<description>Simatic address to command item. If empty, no data will be sent.</description>
			</parameter>
		</config-description>
	</channel-type>
</thing:thing-descriptions>
